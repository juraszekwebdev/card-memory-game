[{"B:\\www\\projects\\card-memory-game\\src\\App.js":"1","B:\\www\\projects\\card-memory-game\\src\\index.js":"2","B:\\www\\projects\\card-memory-game\\src\\reportWebVitals.js":"3","B:\\www\\projects\\card-memory-game\\src\\components\\Logo.js":"4","B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Board.js":"5","B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Card.js":"6","B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Cards.js":"7","B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Timer.js":"8","B:\\www\\projects\\card-memory-game\\src\\helpers\\gameState.js":"9","B:\\www\\projects\\card-memory-game\\src\\components\\Popup\\Popup.js":"10","B:\\www\\projects\\card-memory-game\\src\\components\\Navigation\\Navigation.js":"11","B:\\www\\projects\\card-memory-game\\src\\components\\Navigation\\ChooseLevel.js":"12","B:\\www\\projects\\card-memory-game\\src\\components\\Popup\\Paused.js":"13"},{"size":2593,"mtime":1611677684577,"results":"14","hashOfConfig":"15"},{"size":564,"mtime":1610458060115,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606907524118,"results":"17","hashOfConfig":"15"},{"size":187,"mtime":1610214140612,"results":"18","hashOfConfig":"15"},{"size":864,"mtime":1611676944192,"results":"19","hashOfConfig":"15"},{"size":502,"mtime":1610459077172,"results":"20","hashOfConfig":"15"},{"size":4912,"mtime":1611677796280,"results":"21","hashOfConfig":"15"},{"size":1798,"mtime":1611677566478,"results":"22","hashOfConfig":"15"},{"size":208,"mtime":1610465345347,"results":"23","hashOfConfig":"15"},{"size":646,"mtime":1611677707018,"results":"24","hashOfConfig":"15"},{"size":1138,"mtime":1611677658618,"results":"25","hashOfConfig":"15"},{"size":655,"mtime":1610457154137,"results":"26","hashOfConfig":"15"},{"size":432,"mtime":1611677731215,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"1skb4gy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"B:\\www\\projects\\card-memory-game\\src\\App.js",["57"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Board from \"./components/Board/Board\";\r\nimport Logo from \"./components/Logo\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport {CHOOSING_LEVEL, PAUSED, PENDING, STARTED} from \"./helpers/gameState\";\r\nimport Popup from \"./components/Popup/Popup\";\r\nimport ChooseLevel from \"./components/Navigation/ChooseLevel\";\r\n\r\nconst App = () => {\r\n    const [gameState, setGameState] = useState(PENDING);\r\n    const [gameLevel, setGameLevel] = useState(-1);\r\n    const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n    const [popupContent, setPopupContent] = useState({\r\n        heading: \"\",\r\n        content: \"\",\r\n        button: null\r\n    });\r\n\r\n    const escFunction = useCallback((event) => {\r\n        if (event.key === 'p') {\r\n            setGameState(PAUSED);\r\n            if (gameState === PAUSED) {\r\n                setGameState(STARTED);\r\n            }\r\n        }\r\n    }, [gameState]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", escFunction, false);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", escFunction, false);\r\n        };\r\n    }, [gameState])\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            {isPopupOpened && <Popup\r\n                setIsPopupOpened={setIsPopupOpened}\r\n                content={popupContent}\r\n            />}\r\n            <div className=\"flex-wrapper\">\r\n                \r\n                {gameState === PENDING ?\r\n                    <React.Fragment>\r\n                        <Logo/>\r\n                        <Navigation\r\n                            setGameState={setGameState}\r\n                            setIsPopupOpened={setIsPopupOpened}\r\n                            setPopupContent={setPopupContent}\r\n                        />\r\n                    </React.Fragment> :\r\n                    gameState === CHOOSING_LEVEL ?\r\n                        <ChooseLevel\r\n                            setGameState={setGameState}\r\n                            setGameLevel={setGameLevel}\r\n                        /> :\r\n                        <Board\r\n                            gameLevel={gameLevel}\r\n                            setGameState={setGameState}\r\n                            gameState={gameState}\r\n                            setIsPopupOpened={setIsPopupOpened}\r\n                            setPopupContent={setPopupContent}\r\n                            popupContent={popupContent}\r\n                        />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","B:\\www\\projects\\card-memory-game\\src\\index.js",[],["58","59"],"B:\\www\\projects\\card-memory-game\\src\\reportWebVitals.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Logo.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Board.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Card.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Cards.js",["60","61","62"],"import React, {useEffect, useState} from \"react\";\r\nimport Card from \"./Card\";\r\nimport _ from \"lodash\";\r\nimport {PENDING, STARTED, WIN} from \"../../helpers/gameState\";\r\n\r\nconst initialCards = [\r\n    {\r\n        id: 0,\r\n        icon: <i className=\"fas fa-heart\" />,\r\n        matchWith: 1\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: <i className=\"fas fa-heart\" />,\r\n        matchWith: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        icon: <i className=\"fas fa-plus\" />,\r\n        matchWith: 3\r\n    },\r\n    {\r\n        id: 3,\r\n        icon: <i className=\"fas fa-plus\" />,\r\n        matchWith: 2\r\n    },\r\n    {\r\n        id: 4,\r\n        icon: <i className=\"fas fa-envelope\" />,\r\n        matchWith: 5\r\n    },\r\n    {\r\n        id: 5,\r\n        icon: <i className=\"fas fa-envelope\" />,\r\n        matchWith: 4\r\n    },\r\n    {\r\n        id: 6,\r\n        icon: <i className=\"fas fa-check\" />,\r\n        matchWith: 7\r\n    },\r\n    {\r\n        id: 7,\r\n        icon: <i className=\"fas fa-check\" />,\r\n        matchWith: 6\r\n    },\r\n    {\r\n        id: 8,\r\n        icon: <i className=\"fas fa-times\" />,\r\n        matchWith: 9\r\n    },\r\n    {\r\n        id: 9,\r\n        icon: <i className=\"fas fa-times\" />,\r\n        matchWith: 8\r\n    },\r\n    {\r\n        id: 10,\r\n        icon: <i className=\"fas fa-cloud\" />,\r\n        matchWith: 11\r\n    },\r\n    {\r\n        id: 11,\r\n        icon: <i className=\"fas fa-cloud\" />,\r\n        matchWith: 10\r\n    },\r\n    {\r\n        id: 12,\r\n        icon: <i className=\"fas fa-star\" />,\r\n        matchWith: 13\r\n    },\r\n    {\r\n        id: 13,\r\n        icon: <i className=\"fas fa-star\" />,\r\n        matchWith: 12\r\n    },\r\n    {\r\n        id: 14,\r\n        icon: <i className=\"fas fa-adjust\" />,\r\n        matchWith: 15\r\n    },\r\n    {\r\n        id: 15,\r\n        icon: <i className=\"fas fa-adjust\" />,\r\n        matchWith: 14\r\n    }\r\n]\r\n\r\nconst Cards = props => {\r\n    const {gameState, setGameState, setPopupContent, setIsPopupOpened} = props;\r\n    const [cards, setCards] = useState([]);\r\n    const [clickedCards, setClickedCards] = useState([]);\r\n    const [cardsDisabled, setCardsDisabled] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if(gameState === STARTED) {\r\n            initBoard();\r\n        }\r\n    }, [gameState])\r\n\r\n    useEffect(() => {\r\n        if(_.size(clickedCards) === 2) {\r\n            matchCards();\r\n            setTimeout(() => {\r\n                hideCards();\r\n            }, 200);\r\n        }\r\n    }, [clickedCards])\r\n\r\n    useEffect(() => {\r\n        if(_.size(_.filter(cards, {matched: true})) === _.size(initialCards)) {\r\n            finishGame()\r\n        }\r\n    }, [cards])\r\n\r\n    const initBoard = () => {\r\n        shuffleCards();\r\n    }\r\n\r\n    const shuffleCards = () => {\r\n        let newInitialCards = [...initialCards];\r\n        _.forEach(newInitialCards, card => {\r\n            card.isVisible = false;\r\n            card.matched = false;\r\n        })\r\n        let shuffledCards = _.shuffle(newInitialCards);\r\n        setCards([...shuffledCards]);\r\n    }\r\n\r\n    const matchCards = () => {\r\n        setCardsDisabled(true);\r\n        let newCards = [...cards];\r\n        if (clickedCards[0].matchWith === clickedCards[1].id && clickedCards[0].id === clickedCards[1].matchWith) {\r\n\r\n            setTimeout(() => {\r\n                const cardOneIndex = _.findIndex(newCards, {id: clickedCards[0].id});\r\n                const cardTwoIndex = _.findIndex(newCards, {id: clickedCards[1].id});\r\n                newCards[cardOneIndex].matched = true;\r\n                newCards[cardTwoIndex].matched = true;\r\n                setCards(newCards);\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    const hideCards = () => {\r\n        let newCards = [...cards];\r\n        _.forEach(newCards, card => {\r\n            card.isVisible = false;\r\n        })\r\n        setCards([...newCards]);\r\n        setClickedCards([]);\r\n        setCardsDisabled(false);\r\n    }\r\n\r\n    const finishGame = () => {\r\n        setPopupContent({\r\n            heading: \"Congratulations!\",\r\n            content: \"You won the game!\",\r\n            button: <button className=\"btn\" onClick={() => {setGameState(PENDING); setIsPopupOpened(false);}}>Play again!</button>\r\n        });\r\n        setIsPopupOpened(true);\r\n        setCards([]);\r\n        setGameState(WIN);\r\n    }\r\n\r\n    const handleToggleShowCard = (cardId) => {\r\n        let newCards = [...cards];\r\n        const index = _.findIndex(newCards, {id: cardId});\r\n        const card = newCards[index];\r\n        setClickedCards(prevState => [...prevState, card]);\r\n        newCards[index].isVisible = true;\r\n        setCards(newCards);\r\n    }\r\n\r\n    return (\r\n        <div className={\"cards \" + (cardsDisabled ? \"disabled\" : \"\")}>\r\n            {cards.map((card, index) => {\r\n                return (\r\n                    <Card key={index} card={card} handleToggleShowCard={() => handleToggleShowCard(card.id)} />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;","B:\\www\\projects\\card-memory-game\\src\\components\\Board\\Timer.js",["63","64"],"B:\\www\\projects\\card-memory-game\\src\\helpers\\gameState.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Popup\\Popup.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Navigation\\Navigation.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Navigation\\ChooseLevel.js",[],"B:\\www\\projects\\card-memory-game\\src\\components\\Popup\\Paused.js",[],{"ruleId":"65","severity":1,"message":"66","line":34,"column":8,"nodeType":"67","endLine":34,"endColumn":19,"suggestions":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":99,"column":8,"nodeType":"67","endLine":99,"endColumn":19,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"75","line":108,"column":8,"nodeType":"67","endLine":108,"endColumn":22,"suggestions":"76"},{"ruleId":"65","severity":1,"message":"77","line":114,"column":8,"nodeType":"67","endLine":114,"endColumn":15,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":20,"column":8,"nodeType":"67","endLine":20,"endColumn":10,"suggestions":"80"},{"ruleId":"65","severity":1,"message":"81","line":51,"column":8,"nodeType":"67","endLine":51,"endColumn":29,"suggestions":"82"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'escFunction'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"React Hook useEffect has a missing dependency: 'initBoard'. Either include it or remove the dependency array.",["86"],"React Hook useEffect has missing dependencies: 'hideCards' and 'matchCards'. Either include them or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'finishGame'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'gameLevel'. Either include it or remove the dependency array.",["89"],"React Hook useEffect has missing dependencies: 'setGameState', 'setIsPopupOpened', and 'setPopupContent'. Either include them or remove the dependency array.",["90"],{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [escFunction, gameState]",{"range":"103","text":"104"},"Update the dependencies array to be: [gameState, initBoard]",{"range":"105","text":"106"},"Update the dependencies array to be: [clickedCards, hideCards, matchCards]",{"range":"107","text":"108"},"Update the dependencies array to be: [cards, finishGame]",{"range":"109","text":"110"},"Update the dependencies array to be: [gameLevel]",{"range":"111","text":"112"},"Update the dependencies array to be: [timeLeft, gameState, setGameState, setIsPopupOpened, setPopupContent]",{"range":"113","text":"114"},[1192,1203],"[escFunction, gameState]",[2199,2210],"[gameState, initBoard]",[2409,2423],"[clickedCards, hideCards, matchCards]",[2576,2583],"[cards, finishGame]",[677,679],"[gameLevel]",[1580,1601],"[timeLeft, gameState, setGameState, setIsPopupOpened, setPopupContent]"]